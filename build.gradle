plugins {
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'springboot'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2:1.4.193'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //쿼리 파라미터 로그 남기기 >> 개발단계에선 편하지만, 성능저하 이슈가있으므로 배포할때는 꼭 성능테스트를 해볼 것
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
//    implementation group: 'net.jodah', name: 'typeto ols', version: '0.6.3'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'

    // querydsl 추가
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"

    implementation 'org.springframework.boot:spring-boot-starter-security'

}

// Qtype 생성 경로
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
tasks.named('test') {
//    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
